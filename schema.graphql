type Account {
  id: ID! # wallet address (lowercase)
  address: String! # original case address
  salesAsOfferer: [Sale!]! @derivedFrom(field: "offerer")
  salesAsRecipient: [Sale!]! @derivedFrom(field: "recipient")
}

type NFTContract {
  id: ID! # contract address (lowercase)
  address: String! # original case address
  # All tokens in this contract
  tokens: [NFTToken!]! @derivedFrom(field: "contract")
  # All sales involving this contract
  sales: [Sale!]! @derivedFrom(field: "nftContractIds")
}

type NFTToken {
  id: ID! # contract_address:token_id (lowercase)
  contract: NFTContract! # reference to parent contract
  tokenId: String!
  # All sales involving this specific token
  sales: [Sale!]! @derivedFrom(field: "nftTokenIds")
}

type Sale {
  id: ID!
  timestamp: BigInt!
  transactionHash: String!
  market: String!

  offerer: Account!
  recipient: Account!

  # Arrays of NFT contract and token IDs involved in this sale
  nftContractIds: [String!]! # contract addresses involved
  nftTokenIds: [String!]! # contract:tokenId combinations involved
  # Offer items as parallel arrays
  offerItemTypes: [Int!]!
  offerTokens: [String!]!
  offerIdentifiers: [String!]!
  offerAmounts: [String!]!

  # Consideration items as parallel arrays
  considerationItemTypes: [Int!]!
  considerationTokens: [String!]!
  considerationIdentifiers: [String!]!
  considerationAmounts: [String!]!
  considerationRecipients: [String!]!
}
